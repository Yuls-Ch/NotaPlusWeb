@model NotaPlusNew.Models.Usuario
@{
    ViewBag.Title = "Registro de Usuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    @* Add a container for better spacing and responsiveness *@
    <div class="row justify-content-center">
        @* Center the form on the page *@
        <div class="col-md-6">
            @* Set the column width for the form *@
            <div class="card">
                @* Use a card component for a nice visual container *@
                <div class="card-header bg-primary text-white">
                    @* Card header with primary background *@
                    <h2 class="mb-0">Registrarse</h2> @* Remove default bottom margin for h2 in card header *@
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Registrar", "Usuario", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group">
                            @* Use form-group for proper spacing between form elements *@
                            <label for="TipoDocumento">Tipo de Documento</label>
                            @Html.TextBoxFor(m => m.TipoDocumento, new { @class = "form-control", placeholder = "DNI o CE" })
                            @Html.ValidationMessageFor(m => m.TipoDocumento, "", new { @class = "text-danger" }) @* Add text-danger for validation messages *@
                        </div>

                        <div class="form-group">
                            <label for="NumeroDocumento">Número de Documento</label>
                            @Html.TextBoxFor(m => m.NumeroDocumento, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.NumeroDocumento, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="ApellidoPaterno">Apellido Paterno</label>
                            @Html.TextBoxFor(m => m.ApellidoPaterno, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.ApellidoPaterno, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="ApellidoMaterno">Apellido Materno</label>
                            @Html.TextBoxFor(m => m.ApellidoMaterno, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.ApellidoMaterno, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="Nombres">Nombres</label>
                            @Html.TextBoxFor(m => m.Nombres, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Nombres, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="Genero">Género</label>
                            @Html.TextBoxFor(m => m.Genero, new { @class = "form-control", placeholder = "Masculino o Femenino" })
                            @Html.ValidationMessageFor(m => m.Genero, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.EstadoCivil)
                            @Html.DropDownListFor(m => m.EstadoCivil, new SelectList(new[] { "Soltero(a)", "Casado(a)", "Viudo(a)", "Divorciado(a)" }), "Seleccione", new { @class = "form-control" }) @* Add form-control to dropdown *@
                            @Html.ValidationMessageFor(m => m.EstadoCivil, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="FechaNacimiento">Fecha de Nacimiento</label>
                            @Html.TextBoxFor(m => m.FechaNacimiento, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                            @Html.ValidationMessageFor(m => m.FechaNacimiento, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="Direccion">Dirección</label>
                            @Html.TextBoxFor(m => m.Direccion, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Direccion, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="Celular">Celular</label>
                            @Html.TextBoxFor(m => m.Celular, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Celular, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="CorreoElectronico">Correo Electrónico</label>
                            @Html.TextBoxFor(m => m.CorreoElectronico, new { @class = "form-control", type = "email" }) @* Use type="email" for better validation and mobile keyboards *@
                            @Html.ValidationMessageFor(m => m.CorreoElectronico, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="NombreUsuario">Nombre de Usuario</label>
                            @Html.TextBoxFor(m => m.NombreUsuario, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.NombreUsuario, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="Contrasena">Contraseña</label>
                            @Html.PasswordFor(m => m.Contrasena, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Contrasena, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="ConfirmarClave">Confirmar Contraseña</label>
                            @Html.PasswordFor(m => m.ConfirmarClave, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.ConfirmarClave, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="IdRol">Rol</label>
                            @Html.DropDownListFor(m => m.IdRol, (SelectList)ViewBag.ListaRoles, "-- Seleccione Rol --", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.IdRol, "", new { @class = "text-danger" })
                        </div>

                        <div class="d-grid gap-2 mt-4">
                            @* Use d-grid and gap-2 for full-width button and spacing *@
                            <button type="submit" class="btn btn-primary btn-lg">Registrar</button> @* Make button primary and larger *@
                            <a class="btn btn-secondary btn-lg" href="@Url.Action("Login", "Usuario")">Iniciar Sesión</a> @* Make link a button and larger *@
                        </div>
                    }

                    @if (ViewBag.Mensaje != null)
                    {
                        <div class="alert alert-danger mt-3" role="alert">@ViewBag.Mensaje</div> @* Add role="alert" for accessibility *@
                    }
                </div>
            </div>
        </div>
    </div>
</div>